}
dplyr::`%>%`
#'Run and Generate all LR Downstream analysis
#'
#'This function loads the single conditions LR outputs and return the LR network based analysis.
#'It assumes that the table present the following columns Ligand, Ligand.Cluster, Receptor,Receptor.Cluster and MeanLR/another
#'measure
#'@param LRpaths Paths of single condition LR data
#'@param sep character used on csv
#'@return Rmarkdown report all objects from each step
#'@export
#
generate_report <- function(LRpaths){
importFrom(dplyr,"%>%")
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[names[i]]] <- data1
graphs[[names[i]]] <- graph1
}
return(c(graphs,data))
}
LRpath <- c('/home/nagai/Documents/Nadine/Report/shan_filtered.csv')
generate_report(LRpath)
#'
#'This function loads the single conditions LR outputs and return the LR network based analysis.
#'It assumes that the table present the following columns Ligand, Ligand.Cluster, Receptor,Receptor.Cluster and MeanLR/another
#'measure
#'@param LRpaths Paths of single condition LR data
#'@param sep character used on csv
#'@return Rmarkdown report all objects from each step
#'@export
#'@importFrom(dplyr,"%>%")
#'
generate_report <- function(LRpaths){
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[names[i]]] <- data1
graphs[[names[i]]] <- graph1
}
return(c(graphs,data))
}
LRpath <- c('/home/nagai/Documents/Nadine/Report/shan_filtered.csv')
generate_report(LRpath)
#'
#'This function loads the single conditions LR outputs and return the LR network based analysis.
#'It assumes that the table present the following columns Ligand, Ligand.Cluster, Receptor,Receptor.Cluster and MeanLR/another
#'measure
#'@param LRpaths Paths of single condition LR data
#'@param sep character used on csv
#'@return Rmarkdown report all objects from each step
#'@export
#'@importFrom(dplyr,"%>%")
#'
library(dplyr)
generate_report <- function(LRpaths){
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[names[i]]] <- data1
graphs[[names[i]]] <- graph1
}
return(c(graphs,data))
}
LRpath <- c('/home/nagai/Documents/Nadine/Report/shan_filtered.csv')
generate_report(LRpath)
?separate
generate_report <- function(LRpaths){
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
tidyr::separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[names[i]]] <- data1
graphs[[names[i]]] <- graph1
}
return(c(graphs,data))
}
LRpath <- c('/home/nagai/Documents/Nadine/Report/shan_filtered.csv')
generate_report(LRpath)
LRpath <- c('CONTROL'='/home/nagai/Documents/Nadine/Report/shan_filtered.csv')
LRpath
generate_report <- function(LRpaths){
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
tidyr::separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[names[i]]] <- data1
graphs[[names[i]]] <- graph1
}
return(c(graphs,data))
}
LRpath <- c('CONTROL'='/home/nagai/Documents/Nadine/Report/shan_filtered.csv')
generate_report(LRpath)
generate_report <- function(LRpaths){
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
tidyr::separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[conds[i]]] <- data1
graphs[[conds[i]]] <- graph1
}
return(c(graphs,data))
}
LRpath <- c('CONTROL'='/home/nagai/Documents/Nadine/Report/shan_filtered.csv')
generate_report(LRpath)
LRpath <- c('CONTROL'='/home/nagai/Documents/Nadine/Report/shan_filtered.csv',
'IRI' = '/home/nagai/Documents/Nadine/Report/iri_filtered.csv',
'SNTX' = '/home/nagai/Documents/Nadine/Report/stnx_filtered.csv')
generate_report(LRpath)
#'
#'This function loads the single conditions LR outputs and return the LR network based analysis.
#'It assumes that the table present the following columns Ligand, Ligand.Cluster, Receptor,Receptor.Cluster and MeanLR/another
#'measure
#'@param LRpaths Paths of single condition LR data
#'@param sep character used on csv
#'@return Rmarkdown report all objects from each step
#'@export
#'@importFrom(dplyr,"%>%")
#'
library(dplyr)
read_lr_single_condiction <- function(LRpaths){
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
tidyr::separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[conds[i]]] <- data1
graphs[[conds[i]]] <- graph1
}
return(c(graphs,data))
}
LRpath <- c('CONTROL'='/home/nagai/Documents/Nadine/Report/shan_filtered.csv',
'IRI' = '/home/nagai/Documents/Nadine/Report/iri_filtered.csv',
'SNTX' = '/home/nagai/Documents/Nadine/Report/stnx_filtered.csv')
read_lr_single_condiction(LRpath)
LRObject <- setClass("LRObj", slots=list(graphs="list", tables="list"))
generate_report <- function(LRpaths){
LRObject <- setClass("LRObj", slots=list(graphs="list", tables="list"))
data <- read_lr_single_condiction(LRpaths = )
LRObject@graphs <- data[1]
LRObject@tables <- data[2]
return(LRObject)
}
read_lr_single_condiction <- function(LRpaths){
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
tidyr::separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[conds[i]]] <- data1
graphs[[conds[i]]] <- graph1
}
return(c(graphs,data))
}
generate_report(LRpath)
LRpath <- c('CONTROL'='/home/nagai/Documents/Nadine/Report/shan_filtered.csv',
'IRI' = '/home/nagai/Documents/Nadine/Report/iri_filtered.csv',
'SNTX' = '/home/nagai/Documents/Nadine/Report/stnx_filtered.csv')
generate_report(LRpath)
generate_report <- function(LRpaths){
LRObject <- setClass("LRObj", slots=list(graphs="list", tables="list"))
data <- read_lr_single_condiction(LRpaths)
LRObject@graphs <- data[1]
LRObject@tables <- data[2]
return(LRObject)
}
read_lr_single_condiction <- function(LRpaths){
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
tidyr::separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[conds[i]]] <- data1
graphs[[conds[i]]] <- graph1
}
return(c(graphs,data))
}
LRpath <- c('CONTROL'='/home/nagai/Documents/Nadine/Report/shan_filtered.csv',
'IRI' = '/home/nagai/Documents/Nadine/Report/iri_filtered.csv',
'SNTX' = '/home/nagai/Documents/Nadine/Report/stnx_filtered.csv')
generate_report(LRpath)
LRObject <- setClass("LRObj", slots=list(graphs="list", tables="list"))
LRObject <- setClass("LRObj", slots=list(graphs="list", tables="list"))
generate_report <- function(LRpaths){
data <- read_lr_single_condiction(LRpaths)
graphs <- data[1]
tables <- data[2]
LR <- new("LRObj",graphs=graphs, tables=tables)
return(LR)
}
read_lr_single_condiction <- function(LRpaths){
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
tidyr::separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[conds[i]]] <- data1
graphs[[conds[i]]] <- graph1
}
return(c(graphs,data))
}
################################## TEST ##########################
LRpath <- c('CONTROL'='/home/nagai/Documents/Nadine/Report/shan_filtered.csv',
'IRI' = '/home/nagai/Documents/Nadine/Report/iri_filtered.csv',
'SNTX' = '/home/nagai/Documents/Nadine/Report/stnx_filtered.csv')
generate_report(LRpath)
aux <- generate_report(LRpath)
aux@graphs
aux@graphs$CONTROL
aux@graphs$IRI
aux@tables
#'
#'This function loads the single conditions LR outputs and return the LR network based analysis.
#'It assumes that the table present the following columns Ligand, Ligand.Cluster, Receptor,Receptor.Cluster and MeanLR/another
#'measure
#'@param LRpaths Paths of single condition LR data
#'@param sep character used on csv
#'@return Rmarkdown report all objects from each step
#'@export
#'@importFrom(dplyr,"%>%")
#'
library(dplyr)
LRObject <- setClass("LRObj", slots=list(graphs="list", tables="list"))
generate_report <- function(LRpaths){
data <- read_lr_single_condiction(LRpaths)
}
read_lr_single_condiction <- function(LRpaths){
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
tidyr::separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[conds[i]]] <- data1
graphs[[conds[i]]] <- graph1
}
LR <- new("LRObj",graphs=graphs, tables=tables)
return(LR)
}
################################## TEST ##########################
LRpath <- c('CONTROL'='/home/nagai/Documents/Nadine/Report/shan_filtered.csv',
'IRI' = '/home/nagai/Documents/Nadine/Report/iri_filtered.csv',
'SNTX' = '/home/nagai/Documents/Nadine/Report/stnx_filtered.csv')
aux <- generate_report(LRpath)
read_lr_single_condiction <- function(LRpaths){
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
tidyr::separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[conds[i]]] <- data1
graphs[[conds[i]]] <- graph1
}
LR <- new("LRObj",graphs=graphs, tables=data)
return(LR)
}
################################## TEST ##########################
LRpath <- c('CONTROL'='/home/nagai/Documents/Nadine/Report/shan_filtered.csv',
'IRI' = '/home/nagai/Documents/Nadine/Report/iri_filtered.csv',
'SNTX' = '/home/nagai/Documents/Nadine/Report/stnx_filtered.csv')
aux <- generate_report(LRpath)
aux@tables
aux@tables$IRI
#'
#'This function loads the single conditions LR outputs and return the LR network based analysis.
#'It assumes that the table present the following columns Ligand, Ligand.Cluster, Receptor,Receptor.Cluster and MeanLR/another
#'measure
#'@param LRpaths Paths of single condition LR data
#'@param sep character used on csv
#'@return Rmarkdown report all objects from each step
#'@export
#'@importFrom(dplyr,"%>%")
#'
library(dplyr)
#' Create an object with network and table
LRObject <- setClass("LRObj", slots=list(graphs="list", tables="list"))
#` Overall function
generate_report <- function(LRpaths){
data <- read_lr_single_condiction(LRpaths)
}
#` Read Tables and Make a Graph
read_lr_single_condiction <- function(LRpaths){
data <- list()
graphs <- list()
conds <- names(LRpaths)
for(i in 1:length(LRpaths)){
data1 <- read.csv(LRpaths[i])
data1 <- data1[, c('Ligand.Cluster','Receptor.Cluster', 'MeanLR')]
data1$pair <- paste(data1$Ligand.Cluster,data1$Receptor.Cluster,sep='_')
data1 <- tibble::as_tibble(data1)
final <- data1 %>%
group_by(pair) %>%
summarise(MeanLR = sum(MeanLR))
aux <- final$pair
final <- final %>%
tidyr::separate(pair, c("u", "v"), "_")
final$pair=aux
freq = table(data1$pair)/sum(table(data1$pair))
final$freq <- as.array(freq)[final$pair]
graph1 <- igraph::graph_from_data_frame(final[,c('u','v',"MeanLR")])
data[[conds[i]]] <- data1
graphs[[conds[i]]] <- graph1
}
LR <- new("LRObj",graphs=graphs, tables=data)
return(LR)
}
################################## TEST ##########################
LRpath <- c('CONTROL'='/home/nagai/Documents/Nadine/Report/shan_filtered.csv',
'IRI' = '/home/nagai/Documents/Nadine/Report/iri_filtered.csv',
'SNTX' = '/home/nagai/Documents/Nadine/Report/stnx_filtered.csv')
aux <- generate_report(LRpath)
aux@tables$IRI
aux@tables$SNTX
aux@tables$SHAN
aux@tables$SHAM
devtools::load_all('./Documents/LRAnalytics/')
devtools::document('../LRAnalytics/')
devtools::load_all('../LRAnalytics/')
devtools::build('../LRAnalytics/')
paths <- c('SHAM' = '../Nadine/Report/shan_filtered_corrected_hypertrophy.csv',
'IRI' = '../Nadine/Report/iri_filtered_corrected_hypertrophy.csv',
'SNTX' = '../Nadine/Report/stnx_filtered_corrected_hypertrophy.csv')
anno_colors = c(
"Cardiomyocytes 1" = "#800000",
"Cardiomyocytes 2" = "#f06262",
"Cardiomyocytes 3" = "#ed8e8e",
"Cardiomyocytes 4" = "#f2acac",
"Endothelial cells 1" = "#000075",
"Endothelial cells 2" = "#7f7ff5",
"Fibroblasts 1" = "#911eb4",
"Fibroblasts 2" = "#a962bf",
"Fibroblasts 3" = "#c39dcf",
"Lymphatic endothelial" = "#ffd8b1",
"Lymphocytes" = "#b59e88",
"Macrophages" = "#e6194B",
"Mesothelial cells" = "#fabebe",
"Pericytes 1" = "#f58231",
"Pericytes 2" = "#b86932",
"Pericytes 3" = "#693a19",
"T-cells 1" = "#ffe119",
"T-cells 2" = "#8c7f29",
"T-cells 3" = "#4f4818",
"Vascular endothelial" =  "#999999",
"VSMCs" = "#aaffc3"
)
genes <- c('FGFR2', 'TNF')
data <- generate_report(paths,genes,'/home/nagai/Documents/',threshold = 0,colors=anno_colors,out_file='Hypertrophy.html')
