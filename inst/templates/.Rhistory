install.packages('DT')
DT
require(DT)
system.time()
system()
systempackageVersion("DT")
'DT' %in% loadedNamespaces()
sessionInfo()
devtools::load_all('/home/nagai/Documents/LRAnalytics')
#require(LRAnalytics)
paths <- c('SHAM' = '/home/nagai/Documents/Nadine/Report/shan_filtered_corrected.csv',
'IRI' = '/home/nagai/Documents/Nadine/Report/iri_filtered_corrected.csv',
'SNTX' = '/home/nagai/Documents/Nadine/Report/stnx_filtered_corrected.csv')
genes <- c('TNF','FGFR2')
data <- generate_report(paths,genes,'/home/nagai/Documents/Nadine/Report/',threshold =0)
data@graphs_ggi
graph <- 'SHAM'
in_deg <- table(data@tables[[graph]]$Ligand)
in_deg <- tibble::tibble(cells=names(in_deg),inter=in_deg)
out_deg <-table(data@tables[[graph]]$Receptor)
out_deg <- tibble::tibble(cells=names(out_deg),inter=out_deg)
in_deg
bet <- igraph::betweenness(data@graphs_ggi[[graph]],weights = abs(igraph::E(data@graphs_ggi[[graph]])$MeanLR))
bet <- igraph::betweenness(data@graphs_ggi[[graph]],weights = abs(igraph::E(data@graphs_ggi[[graph]])$MeanLR))
clo <- igraph::closeness(data@graphs_ggi[[graph]],weights = abs(igraph::E(data@graphs_ggi[[graph]])$MeanLR))
data@graphs_ggi[[graph]]
graph <- 'IRI_x_SHAM'
in_deg <- table(data@tables[[graph]]$Ligand)
in_deg <- tibble::tibble(cells=names(in_deg),inter=in_deg)
out_deg <-table(data@tables[[graph]]$Receptor)
out_deg <- tibble::tibble(cells=names(out_deg),inter=out_deg)
bet <- igraph::betweenness(data@graphs_ggi[[graph]],weights = abs(igraph::E(data@graphs_ggi[[graph]])$MeanLR))
clo <- igraph::closeness(data@graphs_ggi[[graph]],weights = abs(igraph::E(data@graphs_ggi[[graph]])$MeanLR))
?closeness
?closeness
for(i in igraph::components(data@graphs_ggi[[graph]])){
print(i)
}
for(i in igraph::components(data@graphs_ggi[[graph]])){
print(i)
}
for(i in levels(comp){
comp <- igraph::components(data@graphs_ggi[[graph]])
for(i in levels(comp){
comp <- igraph::components(data@graphs_ggi[[graph]])
for(i in levels(comp)){
print(i)
}
comp <- igraph::components(data@graphs_ggi[[graph]])
for(i in levels(comp)){
print(i)
}
levels(comp)
for(i in levels(comp$membership)){
print(i)
}
for(i in unique(comp$membership)){
print(i)
}
for(i in unique(comp$membership)){
subgraph <- igraph::subgraph(data@graphs_ggi[[graph]], V(data@graphs_ggi[[graph]])[comp$membership==i])
}
in_deg <- table(data@tables[[graph]]$Ligand)
in_deg <- tibble::tibble(cells=names(in_deg),inter=in_deg)
out_deg <-table(data@tables[[graph]]$Receptor)
out_deg <- tibble::tibble(cells=names(out_deg),inter=out_deg)
comp <- igraph::components(data@graphs_ggi[[graph]])
for(i in unique(comp$membership)){
subgraph <- igraph::subgraph(data@graphs_ggi[[graph]], V(data@graphs_ggi[[graph]])[comp$membership==i])
bet <- igraph::betweenness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR))
clo <- igraph::closeness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR))
eigen <- igraph::eigen_centrality(subgraph)
pagerank <- igraph::page.rank(subgraph)
}
in_deg <- table(data@tables[[graph]]$Ligand)
in_deg <- tibble::tibble(cells=names(in_deg),inter=in_deg)
out_deg <-table(data@tables[[graph]]$Receptor)
out_deg <- tibble::tibble(cells=names(out_deg),inter=out_deg)
comp <- igraph::components(data@graphs_ggi[[graph]])
all <- tibble::tibble()
for(i in unique(comp$membership)){
tmp <- tibble::tibble()
subgraph <- igraph::subgraph(data@graphs_ggi[[graph]], V(data@graphs_ggi[[graph]])[comp$membership==i])
bet <- igraph::betweenness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR))
clo <- igraph::closeness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR))
eigen <- igraph::eigen_centrality(subgraph)
pagerank <- igraph::page.rank(subgraph)
ac <- igraph::V(data@graphs[[graph]]) %in% igraph::articulation.points(data@graphs[[graph]])
tmp <- tibble::tibble(nodes = names(bet),betweenness=bet,closeness=clo,eigenvector=eigen$vector,pagerank=pagerank$vector,articulatio_ptn=ac)
all <- rbind(all,tmp)
}
for(i in unique(comp$membership)){
tmp <- tibble::tibble()
subgraph <- igraph::subgraph(data@graphs_ggi[[graph]], V(data@graphs_ggi[[graph]])[comp$membership==i])
bet <- igraph::betweenness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR))
clo <- igraph::closeness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR))
eigen <- igraph::eigen_centrality(subgraph)
pagerank <- igraph::page.rank(subgraph)
ac <- igraph::V(subgraph) %in% igraph::articulation.points(subgraph)
tmp <- tibble::tibble(nodes = names(bet),betweenness=bet,closeness=clo,eigenvector=eigen$vector,pagerank=pagerank$vector,articulatio_ptn=ac)
all <- rbind(all,tmp)
}
all
in_deg <- table(data@tables[[graph]]$Ligand)
in_deg <- tibble::tibble(cells=names(in_deg),inter=in_deg)
out_deg <-table(data@tables[[graph]]$Receptor)
out_deg <- tibble::tibble(cells=names(out_deg),inter=out_deg)
comp <- igraph::components(data@graphs_ggi[[graph]])
all <- tibble::tibble()
for(i in unique(comp$membership)){
tmp <- tibble::tibble()
subgraph <- igraph::subgraph(data@graphs_ggi[[graph]], V(data@graphs_ggi[[graph]])[comp$membership==i])
bet <- igraph::betweenness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR),normalized = T)
clo <- igraph::closeness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR),normalized = T)
eigen <- igraph::eigen_centrality(subgraph,scale = T,weights = abs(igraph::E(subgraph)$MeanLR))
pagerank <- igraph::page.rank(subgraph)
ac <- igraph::V(subgraph) %in% igraph::articulation.points(subgraph)
tmp <- tibble::tibble(nodes = names(bet),betweenness=bet,closeness=clo,eigenvector=eigen$vector,pagerank=pagerank$vector,articulatio_ptn=ac)
all <- rbind(all,tmp)
}
all
bet
clo
print(clo)
for(i in unique(comp$membership)){
tmp <- tibble::tibble()
subgraph <- igraph::subgraph(data@graphs_ggi[[graph]], V(data@graphs_ggi[[graph]])[comp$membership==i])
bet <- igraph::betweenness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR),normalized = T)
print(bet)
clo <- igraph::closeness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR),normalized = T)
print(clo)
eigen <- igraph::eigen_centrality(subgraph,scale = T,weights = abs(igraph::E(subgraph)$MeanLR))
pagerank <- igraph::page.rank(subgraph)
ac <- igraph::V(subgraph) %in% igraph::articulation.points(subgraph)
tmp <- tibble::tibble(nodes = names(bet),betweenness=bet,closeness=clo,eigenvector=eigen$vector,pagerank=pagerank$vector,articulatio_ptn=ac)
all <- rbind(all,tmp)
}
names(bet)
names(eigen)
names(eigen#vector)
names(eigen#vector)
names(eigen$vector)
graph <- 'IRI_x_SHAM'
in_deg <- table(data@tables[[graph]]$Ligand)
in_deg <- tibble::tibble(cells=names(in_deg),inter=in_deg)
out_deg <-table(data@tables[[graph]]$Receptor)
out_deg <- tibble::tibble(cells=names(out_deg),inter=out_deg)
comp <- igraph::components(data@graphs_ggi[[graph]])
all <- tibble::tibble()
for(i in unique(comp$membership)){
tmp <- tibble::tibble()
subgraph <- igraph::subgraph(data@graphs_ggi[[graph]], V(data@graphs_ggi[[graph]])[comp$membership==i])
bet <- igraph::betweenness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR),normalized = T)
print(bet)
clo <- igraph::closeness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR),normalized = T)
print(clo)
eigen <- igraph::eigen_centrality(subgraph,scale = T,weights = abs(igraph::E(subgraph)$MeanLR))
pagerank <- igraph::page.rank(subgraph)
ac <- igraph::V(subgraph) %in% igraph::articulation.points(subgraph)
tmp <- tibble::tibble(nodes = names(bet),betweenness=bet,closeness=clo[names(bet)],eigenvector=eigen$vector[names(bet)],pagerank=pagerank$vector[names(bet)],articulatio_ptn=ac[names(bet)])
all <- rbind(all,tmp)
}
warnings()
in_deg <- table(data@tables[[graph]]$Ligand)
in_deg <- tibble::tibble(cells=names(in_deg),inter=in_deg)
out_deg <-table(data@tables[[graph]]$Receptor)
out_deg <- tibble::tibble(cells=names(out_deg),inter=out_deg)
comp <- igraph::components(data@graphs_ggi[[graph]])
all <- tibble::tibble()
for(i in unique(comp$membership)){
tmp <- tibble::tibble()
subgraph <- igraph::induced.subgraph(data@graphs_ggi[[graph]], V(data@graphs_ggi[[graph]])[comp$membership==i])
bet <- igraph::betweenness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR),normalized = T)
print(bet)
clo <- igraph::closeness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR),normalized = T)
print(clo)
eigen <- igraph::eigen_centrality(subgraph,scale = T,weights = abs(igraph::E(subgraph)$MeanLR))
pagerank <- igraph::page.rank(subgraph)
ac <- igraph::V(subgraph) %in% igraph::articulation.points(subgraph)
tmp <- tibble::tibble(nodes = names(bet),betweenness=bet,closeness=clo[names(bet)],eigenvector=eigen$vector[names(bet)],pagerank=pagerank$vector[names(bet)],articulatio_ptn=ac[names(bet)])
all <- rbind(all,tmp)
}
warnings()
estimate_closeness()
?estimate_closeness()
in_deg <- table(data@tables[[graph]]$Ligand)
in_deg <- tibble::tibble(cells=names(in_deg),inter=in_deg)
out_deg <-table(data@tables[[graph]]$Receptor)
out_deg <- tibble::tibble(cells=names(out_deg),inter=out_deg)
comp <- igraph::components(data@graphs_ggi[[graph]])
all <- tibble::tibble()
for(i in unique(comp$membership)){
tmp <- tibble::tibble()
subgraph <- igraph::induced.subgraph(data@graphs_ggi[[graph]], which(comp$membership == i))
bet <- igraph::betweenness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR),normalized = T)
print(bet)
clo <- igraph::closeness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR),normalized = T)
print(clo)
eigen <- igraph::eigen_centrality(subgraph,scale = T,weights = abs(igraph::E(subgraph)$MeanLR))
pagerank <- igraph::page.rank(subgraph)
ac <- igraph::V(subgraph) %in% igraph::articulation.points(subgraph)
tmp <- tibble::tibble(nodes = names(bet),betweenness=bet,closeness=clo[names(bet)],eigenvector=eigen$vector[names(bet)],pagerank=pagerank$vector[names(bet)],articulatio_ptn=ac[names(bet)])
all <- rbind(all,tmp)
}
in_deg <- table(data@tables[[graph]]$Ligand)
in_deg <- tibble::tibble(cells=names(in_deg),inter=in_deg)
out_deg <-table(data@tables[[graph]]$Receptor)
out_deg <- tibble::tibble(cells=names(out_deg),inter=out_deg)
comp <- igraph::components(data@graphs_ggi[[graph]])
all <- tibble::tibble()
for(i in unique(comp$membership)){
tmp <- tibble::tibble()
subgraph <- igraph::induced.subgraph(data@graphs_ggi[[graph]], which(comp$membership == i))
bet <- igraph::betweenness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR),normalized = T)
clo <- igraph::closeness(subgraph,weights = abs(igraph::E(subgraph)$MeanLR),normalized = T)
eigen <- igraph::eigen_centrality(subgraph,scale = T,weights = abs(igraph::E(subgraph)$MeanLR))
pagerank <- igraph::page.rank(subgraph)
ac <- igraph::V(subgraph) %in% igraph::articulation.points(subgraph)
tmp <- tibble::tibble(nodes = names(bet),betweenness=bet,closeness=clo[names(bet)],eigenvector=eigen$vector[names(bet)],pagerank=pagerank$vector[names(bet)],articulatio_ptn=ac[names(bet)])
all <- rbind(all,tmp)
}
